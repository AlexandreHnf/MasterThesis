bin, avg_CT, avg_SS, avg_rel
fib, avg_CT, avg_SS, avg_rel
list, avg_CT, avg_SS, avg_rel


experiment1 : 
graph1.csv
	bin, avg_CT, avg_SS, avg_rel
	fib, avg_CT, avg_SS, avg_rel
	list, avg_CT, avg_SS, avg_rel
graph2.csv
graph3.csv
grpah4.csv
...
	
	=> {"bin": {"avg_CT"; "avg_SS", "avg_rel"}, "fib": {...}, ...}

experiment2 : 
	euclidean
	manhattan
	octile

	=> {"euclidean": {"avg_CT"; "avg_SS", "avg_rel"}, "manhattan": {...}, ...}

experiment3 : 
	random
	farthest
	planar

	=> {"random": {"avg_CT"; "avg_SS", "avg_rel", "lm_dists_CT"}, "farthest": {...}, ...}

experiment4 :
	1
	2
	4
	8
	16
	32

	=> {"1": {"avg_CT"; "avg_SS", "avg_rel", "lm_dists_CT"}, "2": {...}, ...}

experiment5 : 
	Dijkstra
	Astar
	ALT
	BidiDijkstra
	BidiAstar
	BidiALT

	=> {"Dijkstra": {"avg_CT"; "avg_SS", "avg_rel", "lm_dists_CT"}, "A*": {...}, "ALT": {...}, ...}

experiment6 : 
	prepro_time
	
	=> ["landmark_selection", "nb_landmarks", "prepro_CT"]

experiment7 : 
	toutes les combinaisons de nb_added_edges et speed_limits
	speed_limit, nb_added_edges, Dijkstra, 

	=> {1: ["speed_limit", "nb_added_edges", "D_avg_CT", "D_avg_SS", "D_avg_rel", "ALT_avg_CT", "ALT_avg_SS", "ALT_avg_rel", "lm_dists_CT"], 
	    2: [...], ...}

experiment8 : 
	Dijkstra
	ALT

	=> {"Dijkstra" : {"avg_CT", "avg_SS", "avg_rel", "lm_dists_CT", "nb_villo_stations"}, "ALT" : {...}}

experiment9 : 
	TODO

experiment10 : 
	TODO 

===============================

nb_nodes, nb_edges, max_avg_degree, memory_overhead, preprocessing_time, Dijkstra CT, ALT CT, speed-up, Dijkstra_SS, ALT_SS, SS_improv, Dijkstra_RE, ALT_RE

===============================

idea : 
	json file : 
		graph1:
			algo1:
				nb_nodes, nb_edges, avg_CT, avg_SS, avg_rel ...
			algo2:
				...
			tot_time_elapsed : ...
		graph2:
			...

